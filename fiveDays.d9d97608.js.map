{"version":3,"sources":["fiveDays.js"],"names":["fiveDayList","document","querySelector","fiveDayCitiesName","fiveDayContainer","latForFiveDays","lonForFiveDays","nameForFiveDays","countryForFiveDays","test","APIKey","response","fetch","testList","json","infoAboutCity","city","coord","lat","lon","name","country","insertAdjacentHTML","btn5days","openFiveDays","creatingFiveDays","changeNameForFiveDays","showFiveDays","fetchWeatherForFiveDays","weatherList","daily","error","then","createMarkupFiveDays","weathers","innerHTML","MarkupFiveDays","slice","map","weather","dateForFiveDays","createDateForFiveDays","iconFiveDays","icon","altFiveDays","description","Math","round","temp","min","max","join","date","Date","dt","day","getDate","month","getMonth","getDay","textContent","classList","remove","clearColorWeekDay","hideFiveDays","add","addEventListener","changeColorWeekDay","isChosenWeekDay","evt","target","nodeName","chosenWeekDay","parentNode","firstElementChild"],"mappings":";AACA,MAAMA,EAAcC,SAASC,cAAc,mBACrCC,EAAoBF,SAASC,cAAc,yBAC3CE,EAAmBH,SAASC,cAAc,wBAChD,IAAIG,EAAiB,GACjBC,EAAiB,GACjBC,EAAkB,GAClBC,EAAqB,GAIzB,eAAeC,IACCC,MACFC,QAAiBC,MAAQ,oGAC7BC,QAAiBF,EAASG,OAI1BC,EAAgBF,EAASG,KAOxBH,OANRR,EAAiBU,EAAcE,MAAMC,IACrCZ,EAAiBS,EAAcE,MAAME,IACrCZ,EAAkBQ,EAAcK,KAC/BZ,EAAqBO,EAAcM,QAG5BR,EAIXJ,IAGAL,EAAiBkB,mBAAmB,cAAe,mEACnD,MAAMC,EAAWtB,SAASC,cAAc,mBAOxC,SAASsB,IACLC,IACAC,IACAC,IAIJ,eAAeC,IACP,IACMlB,MAAAA,EAAS,mCACTC,QAAiBC,6DAA6DP,SAAsBC,gDAA6DI,KAGhKmB,aAFmBlB,EAASG,QAEhBgB,MAEvB,MAAOC,KAOX,eAAeN,UACLG,IACDI,KAAKF,IACNG,EAAqBH,KAM7B,eAAeG,EAAqBC,GAChClC,EAAYmC,UAAY,GACpBC,IAAAA,QAAuBF,EAASG,MAAM,EAAE,GAAGC,IAAIC,IACzCC,MAAAA,EAAkBC,EAAsBF,GACxCG,EAAeH,EAAQA,QAAQ,GAAGI,KAClCC,EAAaL,EAAQA,QAAQ,GAAGM,YAE9B,+EAC0BL,EAAgB,yDAEnBA,EAAgB,MAAMA,EAAgB,kHACyBE,kDACjEE,4PAIwBE,KAAKC,MAAMR,EAAQS,KAAKC,gNAIxBH,KAAKC,MAAMR,EAAQS,KAAKE,iHAG3BV,EAAgB,sCAEnEW,KAAK,IAID,aAAMnD,EAAYsB,mBAAmB,YAAac,GAI7D,SAASK,EAAsBF,GAEjBa,MAAAA,EAAO,IAAIC,KAAkB,IAAbd,EAAQe,IACxBC,EAAMH,EAAKI,UAIXC,EADiB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,MAAO,OAAQ,MAAO,MAAO,OADrFL,EAAKM,YAQrB,MAAA,CAHqB,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YADtEN,EAAKO,UAIbJ,EAAKE,GAI1B,SAAS/B,IACLvB,EAAkBgC,UAAY,GAC9BhC,EAAkByD,eAAiBrD,MAAoBC,IAK3D,SAASmB,IACLvB,EAAiByD,UAAUC,OAAO,aAClCC,IAIJ,SAASC,IACL5D,EAAiByD,UAAUI,IAAI,aAlGnC1C,EAAS2C,iBAAiB,QAAS1C,GAyGnCxB,EAAYkE,iBAAiB,QAASC,GACtC,IAAIC,EAAkB,KACtB,SAASD,EAAmBE,GACpBA,GAAwB,WAAxBA,EAAIC,OAAOC,SACX,OAEJR,IAEMS,MAAAA,EAAgBH,EAAIC,OAAOG,WAAWC,kBAC5CF,EAAcX,UAAUI,IAAI,sBAEvBI,EAAIC,QAAWF,GAGhBC,EAAIC,OAAOG,aAAeL,EAAgBK,YAC1CD,EAAcX,UAAUC,OAAO,sBAOvC,SAASC,KACLK,EAAkBnE,SAASC,cAAc,yBAErCkE,EAAgBP,UAAUC,OAAO","file":"fiveDays.d9d97608.js","sourceRoot":"../src","sourcesContent":["\nconst fiveDayList = document.querySelector('.fiveDays__list')\nconst fiveDayCitiesName = document.querySelector('.fiveDays__citiesName')\nconst fiveDayContainer = document.querySelector('.fiveDays--container')\nlet latForFiveDays = ''\nlet lonForFiveDays = ''\nlet nameForFiveDays = ''\nlet countryForFiveDays = ''\n\n// мой тестовый запрос по городу /////////////////////\n\nasync function test() {\n          const APIKey = 'daa3c03c1253f276d26e4e127c34d058'\n        const response = await fetch (`https://api.openweathermap.org/data/2.5/forecast?q=london&appid=${APIKey}`)\n    const testList = await response.json()\n\n// добавить в общий запрос:\n    /////////////\n    const infoAboutCity = testList.city\n   latForFiveDays = infoAboutCity.coord.lat\n   lonForFiveDays = infoAboutCity.coord.lon\n   nameForFiveDays = infoAboutCity.name\n    countryForFiveDays = infoAboutCity.country\n    \n   ///////// // \n    return testList\n   \n}\n\ntest()\n\n// имитация кнопки 5days////////////////////////////////\nfiveDayContainer.insertAdjacentHTML('beforebegin', '<button type=\"button\" class=\"fiveDays__test\">more info</button>')\nconst btn5days = document.querySelector('.fiveDays__test')\n\n\n// вешаю слушатель на мою сымитированную кнопку - типа 5days////////////////\nbtn5days.addEventListener('click', openFiveDays)\n\n\nfunction openFiveDays() {\n    creatingFiveDays()\n    changeNameForFiveDays()\n    showFiveDays()\n}\n\n// запрос на сервер\nasync function fetchWeatherForFiveDays() {\n    try {\n        const APIKey = 'daa3c03c1253f276d26e4e127c34d058'\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${latForFiveDays}&lon=${lonForFiveDays}&exclude=hourly,minutely&units=metric&appid=${APIKey}`)\n        const weatherList = await response.json()\n\n        return weatherList.daily\n    }\n    catch (error) {\n            // Notify.failure(\"Sorry, there are no cyties matching your search query. Please try again.\")\n            \n        }\n}\n\n// создание разметки\nasync function creatingFiveDays() {\n    await fetchWeatherForFiveDays()\n        .then(daily => {\n        createMarkupFiveDays(daily)  \n    })\n   \n}\n\n// разметка\nasync function createMarkupFiveDays(weathers) {\n    fiveDayList.innerHTML = '';\n    let MarkupFiveDays = await weathers.slice(1,6).map(weather => {\n        const dateForFiveDays = createDateForFiveDays(weather)\n        const iconFiveDays = weather.weather[0].icon\n        const altFiveDays= weather.weather[0].description\n   \n        return ` <li class=\"fiveDays__item\">\n        <span class=\"fiveDays__weekDay\">${dateForFiveDays[0]}</span>\n    \n        <span class=\"fiveDays__date\">${dateForFiveDays[1]} ${dateForFiveDays[2]}</span>\n        <div class=\"fiveDays__div\"><img class=\"fiveDays__img\" src=\"http://openweathermap.org/img/wn/${iconFiveDays}@2x.png\" \n   width=\"50px\" height=\"50px\" alt=\"${altFiveDays}\"></div>\n        <div class=\"fiveDays__range--common\">\n            <div class=\"fiveDays__range fiveDays__range--border\">\n                <span class=\"fiveDays__range--limit\">min</span>\n                <span class=\"fiveDays__range--limitNumber\">${Math.round(weather.temp.min)}&#176</span>\n            </div>\n            <div class=\"fiveDays__range\">\n                <span class=\"fiveDays__range--limit\">max</span>\n                <span class=\"fiveDays__range--limitNumber\">${Math.round(weather.temp.max)}&#176</span>\n            </div>\n        </div>\n        <button type=\"button\" class=\"fiveDays__btn\" id=\"${dateForFiveDays[1]}\">more info</button>\n    </li>`\n    }).join('')\n    \n\n    \n    return await fiveDayList.insertAdjacentHTML('beforeend', MarkupFiveDays) \n}\n\n// работа с датой\nfunction createDateForFiveDays(weather) {\n    \n        const date = new Date(weather.dt * 1000)\n        const day = date.getDate()\n\n        const indexMonth = date.getMonth()\n        const arrayOfMonthes = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\n        const month = arrayOfMonthes[indexMonth]\n        \n        const indexWeekDay = date.getDay()\n        const arrayOfWeekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n        const weekDay = arrayOfWeekDays[indexWeekDay]\n    \n    return [weekDay, day, month]\n}\n\n// смена города и страны которые возвращаются от самого первого вызова к бэку\nfunction changeNameForFiveDays() {\n    fiveDayCitiesName.innerHTML = ''\n    fiveDayCitiesName.textContent = `${nameForFiveDays}, ${countryForFiveDays}`\n   \n}\n\n// отображение контейнера 5 дней\nfunction showFiveDays() {\n    fiveDayContainer.classList.remove('is-hidden')\n    clearColorWeekDay()\n}\n\n// скрытие контейнера 5 дней - добавить  на кнопку today)))/////\nfunction hideFiveDays() {\n    fiveDayContainer.classList.add('is-hidden')\n}\n\n// смена цвета дня по клику на moreinfo \n// (сюда можно воткнуть функцию отображения\n//   почасового контейнера::::://////\n\nfiveDayList.addEventListener('click', changeColorWeekDay)\nlet isChosenWeekDay = null\nfunction changeColorWeekDay(evt) {\n    if (evt.target.nodeName !== 'BUTTON') {\n        return;\n    }\n    clearColorWeekDay()\n   \n    const chosenWeekDay = evt.target.parentNode.firstElementChild\n    chosenWeekDay.classList.add('fiveDays--selected')\n\n    if (!evt.target || !isChosenWeekDay) {\n        return\n    }\n    if (evt.target.parentNode === isChosenWeekDay.parentNode) {             \n        chosenWeekDay.classList.remove('fiveDays--selected')\n        // сюда нужно добавить функцию скрытия почасосого окна\n    }\n}\n    \n\n// удаление цвета дня (добавить скрытие почасового контейнера)\nfunction clearColorWeekDay() {\n    isChosenWeekDay = document.querySelector('.fiveDays--selected')\n    if (isChosenWeekDay) {\n        isChosenWeekDay.classList.remove('fiveDays--selected')\n\n    }\n          \n}\n\n\n\n\n\n\n\n\n\n"]}